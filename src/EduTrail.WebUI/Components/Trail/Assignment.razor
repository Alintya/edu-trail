@using EduTrail.Domain.Entities



<div class="lesson">
    <h3>@TrailAssignment.Title</h3>
    <p>@TrailAssignment.Description</p>
    <div class="tags">
        @foreach (var tag in TrailAssignment.Tags)
        {
            <span class="tag">@tag</span>
        }
    </div>

    @if (Expanded)
    {
        @foreach (var c in TrailAssignment.Contents)
        {
            <Content AssignmentContent="c" />
        }
    }

    <div class="download">
        <a href="javascript:void(0)" @onclick="ToggleOpen"><span>Aufgabe @(Expanded ? "schließen" : "öffnen")</span></a>
        @if (TrailAssignment.NeedsSubmission)
        {
            if (TrailAssignment.Submissions.Any())
            {
                <p>Submitted at @TrailAssignment.Submissions.First().SubmittedAt</p>
            }
            else
            {
                <a href="javascript:void(0)" @onclick="ToggleShowUpload"><span>Lösung hochladen</span></a>
            }
        }
        else
        {
            <a href="javascript:void(0)"><span>✔️</span>Geschafft</a>
        }
    </div>
</div>

@if (showUpload)
{
    <div class="modal">
        <div class="modal-content">
            <span class="close" @onclick="ToggleShowUpload">&times;</span>
            <FileUpload OnFileUploaded="OnFileUploaded"/>
        </div>
    </div>
}

@code {
    [Parameter]
    public EduTrail.Domain.Entities.Assignment TrailAssignment { get; set; } = new();

    [Parameter]
    public bool Edit { get; set; }
    [Parameter]
    public bool Expanded { get; set; }

    private bool showUpload { get; set; }

    public void ToggleOpen() => Expanded = !Expanded;

    private void ToggleShowUpload() => showUpload = !showUpload;

    private void OnFileUploaded(EduTrail.Domain.Entities.FileUpload file)
    {
        TrailAssignment.Submissions.Add(new AssignmentSubmission()
            {
                Assignment = TrailAssignment,
                SubmittedAt = DateTime.Now,
            });

        TrailAssignment.Progress.Add(new StudentProgress()
            {
                Assignment = TrailAssignment,
                Student = new Student(), // TODO
            });

        ToggleShowUpload();
    }
}

<style>
    .modal {
        display: block;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 800px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover {
            color: black;
        }
</style>